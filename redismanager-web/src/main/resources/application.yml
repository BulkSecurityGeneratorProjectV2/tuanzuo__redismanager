server:
  port: 80
  compression:
    #启用压缩
    enabled: true
    #设置压缩支持的格式（默认支持text/html等，但不支持application/json）
    mime-types: application/json,text/html,text/xml,text/plain,text/css,text/javascript,application/javascript
  error:
    #指定错误path
    path: /error

#暴露loggers,caches这几个endpoint
management:
  endpoints:
    web:
      exposure:
        include: health,info,loggers,caches,cachers

spring:
  application:
    #配置应用名
    name: redismanagerweb
  profiles: 
    active: local
  servlet:
    multipart:
      #上传单个文件的最大值
      max-file-size: ${upload.one.max.size}
      #上传文件总的最大值
      max-request-size: ${upload.all.max.size}
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  #数据库连接
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://${db.host}:${db.port}/${db.name}?&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&useSSL=false
    username: ${db.username}
    password: ${db.password}
    initialSize: ${db.initialSize}
    minIdle: ${db.minIdle}
    maxActive: ${db.maxActive}
    maxWait: ${db.maxWait}
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 200
    filters: stat,wall,log4j
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    useGlobalDataSourceStat: true
    #自动执行初始化脚本使用(需要提前创建好数据库->db.name)：首次启动应用时设置为ALWAYS，执行完毕后需要把ALWAYS改为NEVER，否则对已存在的表，会报错【如果把continueOnError设置为true就不会报错了】
    initializationMode: ALWAYS
    schema: classpath*:sql/redisadmin.sql
    #初始化脚本错误时是否继续进行，true:继续，false:不继续【如果把initializationMode一直设置为ALWAYS时，可以把continueOnError设置为true，再次启动应用时就不会报错了】
    continueOnError: true

#mybatis
mybatis:
  mapperLocations: classpath*:mapper/**/*Mapper.xml

#分页
pagehelper:
  helperDialect: mysql
  reasonable: true
  #支持通过Mapper接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页
  supportMethodsArguments: true

---
#本地环境
spring:
  profiles: local

  redis:
    host: ${redis.host}
    port: ${redis.port}
    password: ${redis.password}
    database: ${redis.database}

logging:
  level:
    root: info
    com.alibaba.druid: debug
    org.mybatis: debug
    org.apache.ibatis: debug
    com.mysql: debug
    com.tz.redismanager.dao.mapper: debug
    #显示JdbcTemplate的sql执行日志
    org.springframework.jdbc.core: debug
    org.springframework.jdbc.core.StatementCreatorUtils: trace
  file:
    path: /home/tz/Logs/redismanager

rm:
  config: classpath:config/config-local.properties
---
#开发环境
spring:
  profiles: dev
  
  redis:
    host: ${redis.host}
    port: ${redis.port}
    password: ${redis.password}
    database: ${redis.database}

logging:
  level: 
    root: info
    com.alibaba.druid: debug
    org.mybatis: debug
    org.apache.ibatis: debug
    com.mysql: debug
    com.tz.redismanager.dao.mapper: debug
  file:
    path: /home/tz/Logs/redismanager

rm:
  config: classpath:config/config-dev.properties
---
#测试环境
spring:
  profiles: test
  
  redis:
    host: ${redis.host}
    port: ${redis.port}
    password: ${redis.password}
    database: ${redis.database}

logging:
  level: 
    root: info
  file:
    path: /home/tz/Logs/redismanager

rm:
  config: classpath:config/config-test.properties
---
#online环境
spring:
  profiles: online

  redis:
    cluster:
       nodes: ${redis.cluster.nodes}
    password: ${redis.password}
    database: ${redis.database}

logging:
  level:
    root: info
    com.alibaba.druid: debug
    org.mybatis: debug
    org.apache.ibatis: debug
    com.mysql: debug
    com.tz.redismanager.dao.mapper: debug
  file:
    path: /home/tz/Logs/redismanager

rm:
  #config: file:/home/tz/Logs/redismanager/config-online.properties
  config: classpath:config/config-online.properties
